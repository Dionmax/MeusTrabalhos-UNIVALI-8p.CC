select("Genero" = Genre, "Volume" = Loudness..dB..) %>%
distinct()
genXvolPlot <- ggplot(data = genXvol, aes(x = genXvol$Genero, y = genXvol$Volume)) +
geom_bar(stat = "identity")
genXvolPlot
genXvolPlot <- ggplot(data = genXvol, aes(x = `Genero`, y = `Volume`)) +
geom_bar(stat = "identity")
genXvolPlot
genXvolPlot + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
genXvolPlot <- ggplot(data = genXvol, aes(x = `Genero`, y = `Volume`)) +
geom_bar(stat = "identity") + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
genXvolPlot
View(genXvol)
genXvolPlot <- ggplot(data = genXvol, aes(y = `Genero`, x = `Volume`)) +
geom_bar(stat = "identity")
genXvolPlot
genXvolPlot <- ggplot(data = genXvol, aes(y = `Genero`, x = `Volume`)) +
geom_bar(stat = "identity") +
+ scale_fill_grey()
genXvolPlot <- ggplot(data = genXvol, aes(y = `Genero`, x = `Volume`)) +
geom_bar(stat = "identity") +
scale_fill_grey()
genXvolPlot
genXvolPlot <- ggplot(data = genXvol, aes(y = `Genero`, x = `Volume`)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette="Dark2")
genXvolPlot
genXvolPlot <- ggplot(data = genXvol, aes(y = `Genero`, x = `Volume`)) +
geom_bar(stat = "identity") +
theme_minimal()
genXvolPlot
View(genXvolPlot)
genXvolPlot
genXvolPlot
genXvolPlot <- ggplot(data = genXvol, aes(y = `Genero`, x = `Volume`, fill=summresolution)) +
geom_bar(stat = "identity") +
theme_minimal()
genXvolPlot
genXvolPlot <- ggplot(data = genXvol, aes(y = `Genero`, x = `Volume`)) +
geom_bar(stat = "identity") +
theme_minimal()
genXvolPlot
######@> Dados
MainDF <- read_excel(path = "Spotify50.xlsx",
sheet = "Spotify50")
View(MainDF)
######@> Dados
MainDF <- read_excel(path = "Spotify50.xlsx",
sheet = "Spotify50")
View(MainDF)
######@> Dados
MainDF <- read_excel(path = "Spotify50.xlsx",
sheet = "Spotify50")
genXvolPlot <- ggplot(data = genXvol, aes(y = `Genero`, x = `Volume`)) +
geom_bar(stat = "identity") +
theme_gray(base_size = 16)
genXvolPlot
genXvol <- MainDF %>%
select("Gênero" = Genre, "Volume" = Loudness..dB..) %>%
distinct()
genXvolPlot <- ggplot(data = genXvol, aes(y = `Genero`, x = `Volume`)) +
geom_bar(stat = "identity") +
theme_gray(base_size = 16)
genXvolPlot
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume`)) +
geom_bar(stat = "identity") +
theme_gray(base_size = 16)
genXvolPlot
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume`)) +
geom_bar(stat = "identity") +
scale_fill_continuous(type = "viridis")
genXvolPlot
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume`, fill = displ)) +
geom_bar(stat = "identity") +
scale_fill_continuous(type = "viridis")
genXvolPlot
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume`, fill = `Volume`)) +
geom_bar(stat = "identity") +
scale_fill_continuous(type = "viridis")
genXvolPlot
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume`, fill = `Gênero`)) +
geom_bar(stat = "identity") +
scale_fill_continuous(type = "viridis")
genXvolPlot
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume`, fill = `Volume`)) +
geom_bar(stat = "identity") +
scale_fill_continuous(type = "viridis")
genXvolPlot
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume`, fill = `Volume`)) +
geom_bar(stat = "identity") +
+theme_minimal()
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume`, fill = `Volume`)) +
geom_bar(stat = "identity") +
theme_minimal()
genXvolPlot
######@> Dados
MainDF <- read_excel(path = "Spotify50.xlsx",
sheet = "Spotify50")
genXvol <- MainDF %>%
select("Gênero" = Genre, "Volume" = Loudness..dB..) %>%
distinct()
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume`, fill = `Volume`)) +
geom_bar(stat = "identity") +
theme_minimal()
genXvolPlot
######@> Dados
MainDF <- read_excel(path = "Spotify50.xlsx",
sheet = "Spotify50")
genXvol <- MainDF %>%
select("Gênero" = Genre, "Volume" = Loudness..dB..) %>%
distinct()
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume`, fill = `Volume`)) +
geom_bar(stat = "identity")
genXvolPlot
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume`)) +
geom_bar(stat = "identity")
genXvolPlot
a <- genXvol$Volume * -1
genXvolPlot
genXvol <- MainDF %>%
select("Gênero" = Genre, "Volume" = Loudness..dB.. * -1) %>%
distinct()
genXvol <- MainDF %>%
select("Gênero" = Genre, "Volume" = (Loudness..dB.. * -1)) %>%
distinct()
a <- data.frame(genXvol$Gênero, genXvol$Volume * -1)
View(a)
a <- data.frame(genXvol$Gênero, "Volume" = genXvol$Volume * -1)
View(a)
a <- data.frame("Gênero" = genXvol$Gênero, "Volume" = genXvol$Volume * -1)
View(a)
genXvolPos <- data.frame("Gênero" = genXvol$Gênero, "Volume" = genXvol$Volume * -1)
View(a)
######@> Dados
MainDF <- read_excel(path = "Spotify50.xlsx",
sheet = "Spotify50")
######@> Criando um gráfico de barras gênero com valores positivos
genXvolPlotPos <- ggplot(data = genXvolPos, aes(y = `Gênero`, x = `Volume`)) +
geom_bar(stat = "identity")
######@> Separando colunas de gênero e volume e renomendo-as
genXvol <- MainDF %>%
select("Gênero" = Genre, "Volume" = Loudness..dB..) %>%
distinct()
######@> Criando um gráfico de barras gênero
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume`)) +
geom_bar(stat = "identity")
######@> Tornando os valores de volume positivo para melhor entendimento
genXvolPos <- data.frame("Gênero" = genXvol$Gênero, "Volume" = genXvol$Volume * -1)
######@> Criando um gráfico de barras gênero com valores positivos
genXvolPlotPos <- ggplot(data = genXvolPos, aes(y = `Gênero`, x = `Volume`)) +
geom_bar(stat = "identity")
######@> Gráfico Gênero X Volume com valores positivos
genXvolPlotPos
View(MainDF)
######@> Separando colunas de gênero e volume e renomendo-as
genXvol <- MainDF %>%
select("Energia" = Energy, "Liveness" = Liveness) %>%
distinct()
######@> Separando colunas de gênero e volume e renomendo-as
enerXLive <- MainDF %>%
select("Energia" = Energy, "Liveness" = Liveness) %>%
distinct()
######@> Separando colunas de gênero e volume e renomendo-as
genXvol <- MainDF %>%
select("Gênero" = Genre, "Volume" = Loudness..dB..) %>%
distinct()
######@> Criando um gráfico de barras gênero
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume`)) +
geom_bar(stat = "identity")
######@> Tornando os valores de volume positivo para melhor entendimento
genXvolPos <- data.frame("Gênero" = genXvol$Gênero, "Volume" = genXvol$Volume * -1)
######@> Criando um gráfico de barras gênero com valores positivos
genXvolPlotPos <- ggplot(data = genXvolPos, aes(y = `Gênero`, x = `Volume`)) +
geom_bar(stat = "identity")
######@> Separando colunas de gênero e volume e renomendo-as
enerXLive <- MainDF %>%
select("Energia" = Energy, "Liveness" = Liveness) %>%
distinct()
View(enerXLive)
######@> Separando colunas de gênero e volume e renomendo-as
enerXLive <- MainDF %>%
select("Energia" = Energy, "Liveness" = Liveness) %>%
enerXLive <- ggplot(data = enerXLive, aes(x = `Liveness`, y = `Energia`, group = 1)) +
geom_line()+
geom_point()
######@> Separando colunas de gênero e volume e renomendo-as
enerXLive <- MainDF %>%
select("Energia" = Energy, "Liveness" = Liveness)
enerXLivePlot <- ggplot(data = enerXLive, aes(x = `Liveness`, y = `Energia`, group = 1)) +
geom_line()+
geom_point()
enerXLivePlot
enerXLivePlot <- ggplot(data = enerXLive, aes(x = `Liveness`, y = `Energia`)) +
geom_line()+
geom_point()
enerXLivePlot
enerXLivePlot <- ggplot(data = enerXLive, aes(x = `Liveness`,
y = `Energia`, each = 3)) +
geom_line()+
geom_point()
enerXLivePlot
enerXLivePlot <- ggplot(data = enerXLive, aes(x = `Liveness`,
y = `Energia`, each = 5)) +
geom_line()+
geom_point()
enerXLivePlot
enerXLivePlot <- ggplot(data = enerXLive, aes(x = `Liveness`, y = `Energia`)) +
geom_line()+
geom_point()
enerXLivePlot
enerXLivePlot <- ggplot(data = enerXLive, aes(x = `Liveness`, y = `Energia`)) +
geom_point() +
stat_summary(aes(y = `Energia`, group = 1),
fun.y=mean, colour="red", geom="line",group = 1)
enerXLivePlot <- ggplot(data = enerXLive, aes(x = `Liveness`, y = `Energia`)) +
geom_point() +
stat_summary(aes(y = `Energia`, group = 1),
fun = mean, colour="red", geom="line",group = 1)
enerXLivePlot
enerXLiveMean <- enerXLive %>%
group_by(Liveness) %>%
summarise(mean = mean(Energia))
View(enerXLiveMean)
enerXLiveMean <- enerXLive %>%
group_by(Liveness) %>%
summarise("Energia" = mean(Energia))
enerXLiveMean <- enerXLive %>%
group_by(Liveness) %>%
summarise("Energia" = mean(Energia), .groups = 'drop')
View(enerXLiveMean)
View(enerXLiveMean)
enerXLivePlot <- ggplot(data = enerXLiveMean, aes(x = `Liveness`, y = `Energia`)) +
geom_point() +
stat_summary(aes(y = `Energia`, group = 1),
fun = mean, colour="red", geom="line",group = 1)
enerXLivePlot
######@> Separando colunas de gênero e volume e renomendo-as
enerXLive <- MainDF %>%
select("Energia" = Energy, "Liveness" = Liveness)
enerXLivePlot <- ggplot(data = enerXLive, aes(x = `Liveness`, y = `Energia`)) +
geom_point() +
stat_summary(aes(y = `Energia`, group = 1),
fun = mean, colour="red", geom="line",group = 1)
enerXLivePlot
enerXLiveMean <- enerXLive %>%
group_by(Liveness) %>%
summarise("Energia" = mean(Energia), .groups = 'drop')
enerXLivePlotMean <- ggplot(data = enerXLiveMean, aes(x = `Liveness`, y = `Energia`)) +
geom_point() +
stat_summary(aes(y = `Energia`, group = 1),
fun = mean, colour="red", geom="line",group = 1)
enerXLivePlotMean
######@> Gráfico Gênero X Volume
genXvolPlot
enerXLivePlot
View(MainDF)
######@> Gráfico Gênero X Volume
genXvolPlot
######@> Separando colunas de energia e clima e renomendo-as
liveXMood <- MainDF %>%
select("Clima" = Valence.,"Energia" = Energy)
View(liveXMood)
######@> Gráfico Energia e tipo de gravação filtrado
enerXLivePlotMean
liveXMoodPlot <- ggplot(data = liveXMood,
aes(x = `Energia`, y = `Clima`)) +
geom_point() +
stat_summary(aes(y = `Clima`, group = 1),
fun = mean, colour="blue", geom="line",group = 1)
######@> Gráfico Energia e tipo de gravação filtrado
liveXMoodPlot
######@> Gráfico Energia e tipo de gravação filtrado
liveXMoodPlot
View(liveXMood)
######@> Gráfico clima e energia
liveXMoodPlot
######@> Gráfico Gênero X Volume
genXvolPlot
######@> Gráfico Gênero X Volume com valores positivos
genXvolPlotPos
######@> Gráfico Energia e tipo de gravação
enerXLivePlot
######@> Gráfico Energia e tipo de gravação filtrado
enerXLivePlotMean
######@> Gráfico clima e energia
liveXMoodPlot
######@> Separando colunas de duração e gênero
duracaoXGen <- MainDF %>%
select("Duração" = Length., "Gênero" = Genre)
View(duracaoXGen)
######@> Separando colunas de duração e gênero
duracaoXGen <- MainDF %>%
select("Duração" = Length., "Gênero" = Genre) %>%
group_by(`Gênero`) %>%
summarise("Duração" = `Duração`, .groups = 'drop')
View(duracaoXGen)
######@> Separando colunas de duração e gênero
duracaoXGen <- MainDF %>%
select(Length., Genre) %>%
group_by(`Gênero`) %>%
summarise("Duração" = `Duração`, .groups = 'drop')
######@> Separando colunas de duração e gênero
duracaoXGen <- MainDF %>%
select(Length., Genre) %>%
group_by(Genre) %>%
summarise(Length., .groups = 'drop')
View(duracaoXGen)
duracaoXGen <- duracaoXGen %>%
group_by(`Gênero`) %>%
summarise(`Duração`, .groups = 'drop')
######@> Separando colunas de duração e gênero
duracaoXGen <- MainDF %>%
select("Duração" = Length., "Gênero" = Genre)
duracaoXGen <- duracaoXGen %>%
group_by(`Gênero`) %>%
summarise(`Duração`, .groups = 'drop')
View(duracaoXGen)
######@> Separando colunas de duração e gênero
duracaoXGen <- MainDF %>%
select("Duração" = Length., "Gênero" = Genre) %>%
group_by(`Gênero`) %>%
summarise("Duração" = mean(`Duração`), .groups = 'drop')
View(duracaoXGen)
######@> Criando gráfico da relação entre Duração e gênero
duracaoXGenPlot <- ggplot(data = duracaoXGen, aes(x = `Duração`, y = `Gênero`)) +
geom_bar(stat = "identity")
######@> Gráfico Energia e tipo de gravação filtrado
duracaoXGenPlot
######@> Gráfico Energia e tipo de gravação filtrado
duracaoXGenPlot
######@> Separando colunas de duração e gênero
duracaoXGen <- MainDF %>%
select("Duração" = Length., "Gênero" = Genre)
######@> Criando gráfico da relação entre Duração e gênero
duracaoXGenPlot <- ggplot(data = duracaoXGen, aes(x = `Duração`, y = `Gênero`)) +
geom_bar(stat = "identity")
######@> Gráfico Energia e tipo de gravação filtrado
duracaoXGenPlot
######@> Gráfico Energia e tipo de gravação filtrado
duracaoXGenPlot
######@> Separando colunas de duração e gênero
duracaoXGen <- MainDF %>%
select("Duração" = Length., "Gênero" = Genre) %>%
group_by(`Gênero`) %>%
summarise("Duração" = mean(`Duração`), .groups = 'drop')
######@> Criando gráfico da relação entre Duração e gênero
duracaoXGenPlot <- ggplot(data = duracaoXGen, aes(x = `Duração`, y = `Gênero`)) +
geom_bar(stat = "identity")
######@> Gráfico Energia e tipo de gravação filtrado
duracaoXGenPlot
######@> Gráfico duração e gênero média
duracaoXGenPlot
######@> Separando colunas de energia e clima e renomendo-as
liveXEnerg <- MainDF %>%
select("Clima" = Valence.,"Energia" = Energy)
######@> Criando gráfico da relação entre clima e liveness
liveXEnergPlot <- ggplot(data = liveXEnerg,
aes(x = `Energia`, y = `Clima`)) +
geom_point() +
stat_summary(aes(y = `Clima`, group = 1),
fun = mean, colour="blue", geom="line",group = 1)
######@> Gráfico Energia e tipo de gravação filtrado
liveXEnergPlot
######@> Gráfico duração e gênero média
duracaoXGenPlot
######@> Separando colunas de duração e gênero e fazendo a média
duracaoXGen <- MainDF %>%
select("Duração" = Length., "Gênero" = Genre) %>%
group_by(`Gênero`) %>%
summarise("Duração (seg)" = mean(`Duração`), .groups = 'drop')
######@> Criando gráfico da relação entre Duração e gênero
duracaoXGenPlot <- ggplot(data = duracaoXGen, aes(x = `Duração`, y = `Gênero`)) +
geom_bar(stat = "identity")
######@> Gráfico duração e gênero média
duracaoXGenPlot
######@> Criando gráfico da relação entre Duração e gênero
duracaoXGenPlot <- ggplot(data = duracaoXGen, aes(x = `Duração (seg)`, y = `Gênero`)) +
geom_bar(stat = "identity")
######@> Gráfico duração e gênero média
duracaoXGenPlot
######@> Separando colunas de energia e clima e renomendo-as
liveXMood <- MainDF %>%
select("Clima" = Valence., "Live" = Liveness)
######@> Criando gráfico da relação entre clima e liveness
liveXMoodPlot <- ggplot(data = liveXMood,
aes(x = `Live`, y = `Clima`)) +
geom_point() +
stat_summary(aes(y = `Clima`, group = 1),
fun = mean, colour="blue", geom="line",group = 1)
######@> Gráfico Energia e tipo de gravação filtrado
liveXMoodPlot
######@> Gráfico Energia e tipo de gravação filtrado
liveXEnergPlot
######@> Separando colunas de duração média e artista mais escutado
ArtisXduracao <- MainDF %>%
select("Duração" = Length., "Artista" = Artist.Name) %>%
group_by(`Artista`) %>%
summarise("Duração (seg)" = mean(`Duração`), .groups = 'drop')
View(ArtisXduracao)
######@> Separando colunas de duração média e artista mais escutado
ArtisXduracao <- MainDF %>%
select("Duração" = Length., "Artista" = Artist.Name) %>%
group_by(`Artista`) %>%
summarise("Duração (seg)" = mean(`Duração`), .groups = 'drop')
######@> Criando gráfico da relação entre Duração e gênero
ArtisXduracaoPlot <- ggplot(data = ArtisXduracao, aes(x = `Duração (seg)`, y = `Artista`)) +
geom_bar(stat = "identity")
######@> Gráfico duração e gênero média
ArtisXduracaoPlot
######@> Gráfico Gênero X Volume
genXvolPlot
######@> Gráfico Gênero X Volume com valores positivos
genXvolPlotPos
######@> Gráfico Energia e tipo de gravação
enerXLivePlot
######@> Gráfico Energia e tipo de gravação filtrado
enerXLivePlotMean
######@> Ao vivo e clima
liveXMoodPlot
######@> Gráfico duração e gênero média
duracaoXGenPlot
######@> Gráfico clima e energia
liveXEnergPlot
######@> Artista e duração
ArtisXduracaoPlot
######@> Gráfico Gênero X Volume
genXvolPlot
######@> Separando colunas de gênero e volume e renomendo-as
genXvol <- MainDF %>%
select("Gênero" = Genre, "Volume (db)" = Loudness..dB..) %>%
distinct()
######@> Criando um gráfico de barras gênero
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume (db)`)) +
geom_bar(stat = "identity")
######@> Gráfico Gênero X Volume
genXvolPlot
######@> Tornando os valores de volume positivo para melhor entendimento
genXvolPos <- data.frame("Gênero" = genXvol$Gênero,
"Volume (db)" = genXvol$Volume (db) * -1)
######@> Tornando os valores de volume positivo para melhor entendimento
genXvolPos <- data.frame("Gênero" = genXvol$Gênero,
"Volume (db)" = genXvol$Volume (db) * -1)
######@> Tornando os valores de volume positivo para melhor entendimento
genXvolPos <- data.frame("Gênero" = genXvol$Gênero,
"Volume (db)" = genXvol$`Volume (db)` * -1)
######@> Criando um gráfico de barras gênero com valores positivos
genXvolPlotPos <- ggplot(data = genXvolPos, aes(y = `Gênero`, x = `Volume (db)`)) +
geom_bar(stat = "identity")
######@> Gráfico Gênero X Volume com valores positivos
genXvolPlotPos
######@> Tornando os valores de volume positivo para melhor entendimento
genXvolPos <- data.frame("Gênero" = genXvol$Gênero,
"Volume (db)" = genXvol$`Volume (db)` * -1)
######@> Criando um gráfico de barras gênero com valores positivos
genXvolPlotPos <- ggplot(data = genXvolPos, aes(y = `Gênero`, x = `Volume (db)`)) +
geom_bar(stat = "identity")
######@> Gráfico Gênero X Volume com valores positivos
genXvolPlotPos
######@> Criando um gráfico de barras gênero com valores positivos
genXvolPlotPos <- ggplot(data = genXvolPos, aes(y = `Gênero`, x = `Volume (db)`)) +
geom_bar(stat = "identity")
View(genXvolPos)
######@> Criando um gráfico de barras gênero com valores positivos
genXvolPlotPos <- ggplot(data = genXvolPos, aes(y = `Gênero`, x = `Volume (db).`)) +
geom_bar(stat = "identity")
######@> Gráfico Gênero X Volume com valores positivos
genXvolPlotPos
######@> Gráfico Gênero X Volume
genXvolPlot
######@> Tornando os valores de volume positivo para melhor entendimento
genXvolPos <- data.frame("Gênero" = genXvol$Gênero,
"Volume (db)" = genXvol$`Volume (db)` * -1)
View(genXvolPos)
######@> Criando um gráfico de barras gênero com valores positivos
genXvolPlotPos <- ggplot(data = genXvolPos, aes(y = `Gênero`, x = `Volume..db.`)) +
geom_bar(stat = "identity")
######@> Gráfico Gênero X Volume com valores positivos
genXvolPlotPos
######@> Gráfico Gênero X Volume
genXvolPlot
######@> Gráfico Gênero X Volume com valores positivos
genXvolPlotPos
######@> Separando colunas de liveness e clima e renomendo-as
liveXMood <- MainDF %>%
select("Clima" = Valence., "Liveness" = Liveness)
######@> Criando gráfico da relação entre clima e liveness
liveXMoodPlot <- ggplot(data = liveXMood,
aes(x = `Live`, y = `Clima`)) +
geom_point() +
stat_summary(aes(y = `Clima`, group = 1),
fun = mean, colour="blue", geom="line",group = 1)
######@> Gráfico liveness e clima da música filtrado
liveXMoodPlot
######@> Separando colunas de liveness e clima e renomendo-as
liveXMood <- MainDF %>%
select("Clima" = Valence., "Liveness" = Liveness)
######@> Criando gráfico da relação entre clima e liveness
liveXMoodPlot <- ggplot(data = liveXMood,
aes(x = `Liveness`, y = `Clima`)) +
geom_point() +
stat_summary(aes(y = `Clima`, group = 1),
fun = mean, colour="blue", geom="line",group = 1)
######@> Gráfico liveness e clima da música filtrado
liveXMoodPlot
######@> Tornando os valores de volume positivo para melhor entendimento
genXvolPos <- data.frame("Gênero" = genXvol$Gênero,
"Volume (db)" = genXvol$`Volume (db)` * -1)
######@> Criando um gráfico de barras gênero
genXvolPlot <- ggplot(data = genXvol, aes(y = `Gênero`, x = `Volume (db)`)) +
geom_bar(stat = "identity")
######@> Gráfico Gênero X Volume
genXvolPlot
